    ADD global_counter_2 0 0
FUNC_BEGIN innerProduct  
    ADD i_4 0 0
    ADD res_5 0 0
While_Begin_Label_0:
    LSS #Tmp2 i_4 length_3
    ADD #Tmp1 #Tmp2 0
LAnd_End_Label_0:
    ADD #Tmp0 #Tmp1 0
Cond_End_Label_0:
    BEQ While_End_Label_0 #Tmp0 0
    ARR_LOAD #Tmp3 a_3 i_4
    ARR_LOAD #Tmp4 b_3 i_4
    MUL #Tmp5 #Tmp3 #Tmp4
    ADD #Tmp6 res_5 #Tmp5
    ADD res_5 #Tmp6 0
    ADD #Tmp7 i_4 1
    ADD i_4 #Tmp7 0
    JUMP While_Begin_Label_0  
While_End_Label_0:
    RET res_5  
FUNC_END innerProduct  
FUNC_BEGIN scaleBiasCombination  
    ADD i_13 0 0
While_Begin_Label_1:
    LSS #Tmp10 i_13 length_12
    ADD #Tmp9 #Tmp10 0
LAnd_End_Label_1:
    ADD #Tmp8 #Tmp9 0
Cond_End_Label_1:
    BEQ While_End_Label_1 #Tmp8 0
    ARR_LOAD #Tmp11 a_12 i_13
    MUL #Tmp12 #Tmp11 s1_12
    ARR_LOAD #Tmp13 b_12 i_13
    MUL #Tmp14 #Tmp13 s2_12
    ADD #Tmp15 #Tmp12 #Tmp14
    ADD #Tmp16 #Tmp15 bias_12
    ADD #Tmp17 #Tmp16 global_counter_2
    ARR_SAVE res_12 i_13 #Tmp17
    ADD #Tmp18 i_13 1
    ADD i_13 #Tmp18 0
    JUMP While_Begin_Label_1  
While_End_Label_1:
    ADD #Tmp19 global_counter_2 1
    ADD global_counter_2 #Tmp19 0
FUNC_END scaleBiasCombination  
FUNC_BEGIN elementWiseMultiply  
    ADD i_21 0 0
While_Begin_Label_2:
    LSS #Tmp22 i_21 length_20
    ADD #Tmp21 #Tmp22 0
LAnd_End_Label_2:
    ADD #Tmp20 #Tmp21 0
Cond_End_Label_2:
    BEQ While_End_Label_2 #Tmp20 0
    ARR_LOAD #Tmp23 a_20 i_21
    ARR_LOAD #Tmp24 b_20 i_21
    MUL #Tmp25 #Tmp23 #Tmp24
    ARR_SAVE res_20 i_21 #Tmp25
    ADD #Tmp26 i_21 1
    ADD i_21 #Tmp26 0
    JUMP While_Begin_Label_2  
While_End_Label_2:
FUNC_END elementWiseMultiply  
FUNC_BEGIN printVector  
    ARR_LOAD #Tmp27 vec_27 0
    PRINT [ str 
    PRINT #Tmp27 int 
    ADD i_29 1 0
While_Begin_Label_3:
    LSS #Tmp30 i_29 length_27
    ADD #Tmp29 #Tmp30 0
LAnd_End_Label_3:
    ADD #Tmp28 #Tmp29 0
Cond_End_Label_3:
    BEQ While_End_Label_3 #Tmp28 0
    ARR_LOAD #Tmp31 vec_27 i_29
    PRINT ,  str 
    PRINT #Tmp31 int 
    ADD #Tmp32 i_29 1
    ADD i_29 #Tmp32 0
    JUMP While_Begin_Label_3  
While_End_Label_3:
    PRINT ] str 
    PRINT \n str 
FUNC_END printVector  
FUNC_BEGIN main  
    PRINT 19373384 str 
    PRINT \n str 
    INIT_ARR_PTR a_38  
    ARR_SAVE a_38 0 1
    ARR_SAVE a_38 1 3
    ARR_SAVE a_38 2 5
    ARR_SAVE a_38 3 7
    ARR_SAVE a_38 4 9
    ARR_SAVE a_38 5 11
    ARR_SAVE a_38 6 2
    ARR_SAVE a_38 7 9
    ARR_SAVE a_38 8 7
    ARR_SAVE a_38 9 8
    INIT_ARR_PTR b_39  
    ARR_SAVE b_39 0 2
    ARR_SAVE b_39 1 5
    ARR_SAVE b_39 2 4
    ARR_SAVE b_39 3 8
    ARR_SAVE b_39 4 9
    ARR_SAVE b_39 5 6
    ARR_SAVE b_39 6 3
    ARR_SAVE b_39 7 7
    ARR_SAVE b_39 8 1
    ARR_SAVE b_39 9 1
    INIT_ARR_PTR res1_40  
    INIT_ARR_PTR res2_40  
    PREPARE_CALL printVector  
    PUSH_ARR a_38 0 
    PUSH_VAL 10 1 
    CALL printVector  
    PREPARE_CALL printVector  
    PUSH_ARR b_39 0 
    PUSH_VAL 10 1 
    CALL printVector  
    PREPARE_CALL innerProduct  
    PUSH_ARR a_38 0 
    PUSH_ARR b_39 1 
    PUSH_VAL 10 2 
    CALL innerProduct  
    ADD #Tmp33 %RET 0
    ADD result_41 #Tmp33 0
    PRINT Inner product:  str 
    PRINT result_41 int 
    PRINT \n str 
    PREPARE_CALL scaleBiasCombination  
    PUSH_ARR res1_40 0 
    PUSH_ARR a_38 1 
    PUSH_VAL 2 2 
    PUSH_ARR b_39 3 
    PUSH_VAL 3 4 
    PUSH_VAL 4 5 
    PUSH_VAL 10 6 
    CALL scaleBiasCombination  
    PRINT first scale:  str 
    PRINT \n str 
    PREPARE_CALL printVector  
    PUSH_ARR res1_40 0 
    PUSH_VAL 10 1 
    CALL printVector  
    PREPARE_CALL scaleBiasCombination  
    PUSH_ARR res2_40 0 
    PUSH_ARR res1_40 1 
    PUSH_VAL 2 2 
    PUSH_ARR b_39 3 
    PUSH_VAL 3 4 
    PUSH_VAL 4 5 
    PUSH_VAL 10 6 
    CALL scaleBiasCombination  
    PRINT second scale:  str 
    PRINT \n str 
    PREPARE_CALL printVector  
    PUSH_ARR res2_40 0 
    PUSH_VAL 10 1 
    CALL printVector  
    PREPARE_CALL elementWiseMultiply  
    PUSH_ARR res1_40 0 
    PUSH_ARR res2_40 1 
    PUSH_ARR b_39 2 
    PUSH_VAL 10 3 
    CALL elementWiseMultiply  
    PRINT wise multi:  str 
    PRINT \n str 
    PREPARE_CALL printVector  
    PUSH_ARR res1_40 0 
    PUSH_VAL 10 1 
    CALL printVector  
    RET 0  
FUNC_END main  

int sumMatrix(int array_f[][10]) {
    return 0;
}

int matrixMulti(int matrix_a[][10], int matrix_b[][10], int row) {
    int matrix_c[10][10];
    return sumMatrix(matrix_c);
}



int main() {
    output_id();
    printf("%d\n", isPrime(80 + 3 * 3));

    if (const_b >= int_c) {int_d = 1;}

    if (const_b == int_d) {int_e = 0;}

    if (const_b > int_e) {int_d = 3;} else {int_d = 4;}

    int i = 5, j;
    int_c = i + 3 * 2 / 2;
    i = 0;
    while (i < 100) {
        if (i == 0 || i == 1) {
            array[i] = 1;
        } else {
            array[i] = 0;
        }
        i = i + 1;
    }
    i = 5;
    ;
    {}

    while (i < int_c || i > int_c) {

        printf("%d\n", factorial(i));

        i = i + 1;

        if (i == int_c) {break;}
        else {continue;}

    }

    if (i == int_c) {printf("%d\n", return_one());}
    printf("%d\n", A_plus_B(1, 1));
    output_a_plus_b(2, 2);
    i = getint();
    printf("%d\n", i);

    i = +0;
    while (i < 10) {
        j = 0;
        while (j < 10) {
            matrix_A[i][j] = i + 1;
            matrix_B[i][j] = j + 1;
            j = j + 1;
        }
        i = i + 1;
    }

    printf("%d\n", matrixMulti(matrix_A, matrix_B, matrix_A[1][1]));

    return 0;
}